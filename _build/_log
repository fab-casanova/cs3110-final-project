### Starting build.
# Target: property.mli.depends, tags: { extension:mli, file:property.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules property.mli > property.mli.depends # cached
# Target: property.cmi, tags: { byte, compile, extension:mli, file:property.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o property.cmi property.mli # cached
# Target: property.ml.depends, tags: { extension:ml, file:property.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules property.ml > property.ml.depends # cached
# Target: property.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:property.cmo, file:property.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o property.cmo property.ml # cached
# Target: player.mli.depends, tags: { extension:mli, file:player.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { byte, compile, extension:mli, file:player.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o player.cmi player.mli # cached
# Target: player.ml.depends, tags: { extension:ml, file:player.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o player.cmo player.ml # cached
# Target: gameboard.mli.depends, tags: { extension:mli, file:gameboard.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules gameboard.mli > gameboard.mli.depends # cached
# Target: gameboard.cmi, tags: { byte, compile, extension:mli, file:gameboard.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o gameboard.cmi gameboard.mli # cached
# Target: gameboard.ml.depends, tags: { extension:ml, file:gameboard.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules gameboard.ml > gameboard.ml.depends # cached
# Target: gameboard.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:gameboard.cmo, file:gameboard.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o gameboard.cmo gameboard.ml # cached
# Target: game.mli.depends, tags: { extension:mli, file:game.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules game.mli > game.mli.depends # cached
# Target: game.cmi, tags: { byte, compile, extension:mli, file:game.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o game.cmi game.mli # cached
# Target: game.ml.depends, tags: { extension:ml, file:game.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules game.ml > game.ml.depends
# Target: game.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:game.cmo, file:game.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o game.cmo game.ml
+ ocamlfind ocamlc -c -o game.cmo game.ml
File "game.ml", line 5, characters 45-51:
5 | type game = { board : Gameboard.t; players : player list }
                                                 ^^^^^^
Error: Unbound type constructor player
Command exited with code 2.
# Compilation unsuccessful.
